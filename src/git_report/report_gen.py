import json
from datetime import datetime
import markdown
from jinja2 import Template

def generate_markdown_report(repo_name, commits_analysis, date_range):
    """Generate a Markdown report from commit analyses"""
    report = f"""# Git Commit Analysis

## Repository: {repo_name}
## Date Range: {date_range}

## Summary
The repository had {len(commits_analysis)} commits in this period.

## Detailed Commit Analysis
"""
    
    for i, commit in enumerate(commits_analysis, 1):
        report += f"""
### {i}. Commit {commit['sha'][:7]}
- **Author:** {commit['author']}
- **Date:** {commit['date']}
- **Message:** {commit['message']}

#### LLM Analysis
{commit['llm_analysis']}

---
"""
    
    return report

def generate_json_report(repo_name, commits_analysis, date_range):
    """Generate a JSON report from commit analyses"""
    report_data = {
        "repository": repo_name,
        "date_range": date_range,
        "generated_at": datetime.now().isoformat(),
        "commits_count": len(commits_analysis),
        "commits": commits_analysis
    }
    
    return json.dumps(report_data, indent=2, ensure_ascii=False)

def generate_html_report(repo_name, commits_analysis, date_range):
    """Generate an HTML report from commit analyses"""
    # First create Markdown
    md_content = generate_markdown_report(repo_name, commits_analysis, date_range)
    
    # Convert Markdown to HTML
    html_content = markdown.markdown(md_content, extensions=['tables', 'fenced_code'])
    
    # Use HTML template
    template_str = """
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Git Commit Analysis - {{ repo_name }}</title>
        <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; max-width: 900px; margin: 0 auto; padding: 20px; }
            h1 { color: #333; }
            h2 { color: #444; }
            h3 { color: #555; border-top: 1px solid #eee; padding-top: 10px; }
            code { background-color: #f5f5f5; padding: 2px 4px; border-radius: 3px; }
            pre { background-color: #f5f5f5; padding: 10px; border-radius: 3px; overflow-x: auto; }
        </style>
    </head>
    <body>
        {{ content|safe }}
        <footer>
            <p><small>Generated by git-report {{ datetime }}</small></p>
        </footer>
    </body>
    </html>
    """
    
    template = Template(template_str)
    html = template.render(
        content=html_content,
        repo_name=repo_name,
        datetime=datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    )
    
    return html
